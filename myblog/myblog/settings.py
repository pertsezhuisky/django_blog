"""
Django settings for myblog project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

from dotenv import load_dotenv


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

load_dotenv()
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY", "not_secret")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG_ENV = os.getenv("DJANGO_DEBUG", "False").lower()
DEBUG = DEBUG_ENV in ("true", "yes", "t", "1", "y")

ALLOWED_HOSTS = ["127.0.0.1"]

TEMPLATE_CONTEXT_PROCESSORS = (
    "django.core.context_processors.auth",
    "django.core.context_processors.debug",
    "django.core.context_processors.i18n",
    "django.core.context_processors.media",
    "django.core.context_processors.request",
)

# Application definition

INSTALLED_APPS = [
    "account.apps.AccountConfig",
    "comments.apps.CommentsConfig",
    "users.apps.UsersConfig",
    "feed.apps.FeedConfig",
    "core.apps.CoreConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "dj_pagination",
    "bootstrap5",
    "crispy_forms",
    "crispy_bootstrap5",
    "django_ckeditor_5",

]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "dj_pagination.middleware.PaginationMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

ROOT_URLCONF = "myblog.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "myblog.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": ("django.contrib.auth.password_validation."
                 "UserAttributeSimilarityValidator"),
    },
    {
        "NAME": ("django.contrib.auth.password_validation."
                 "MinimumLengthValidator"),
    },
    {
        "NAME": ("django.contrib.auth.password_validation."
                 "CommonPasswordValidator"),
    },
    {
        "NAME": ("django.contrib.auth.password_validation."
                 "NumericPasswordValidator"),
    },
]


LOGIN_URL = "/account/login"
LOGIN_REDIRECT = "/feed/"
LOGIN_REDIRECT_URL = "/feed"

AUTH_USER_MODEL = "users.User"


if os.getenv("DEPLOY").lower() in ["1", "d", "deploy", "dep", "final"]:
    EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
    EMAIL_HOST = "smtp.yandex.com"
    EMAIL_PORT = 465
    EMAIL_USE_TLS = False
    EMAIL_USE_SSL = True

    EMAIL_HOST_USER = os.getenv("EMAIL")
    EMAIL_HOST_PASSWORD = os.getenv("EMAIL_PASSWORD")
    DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
else:
    EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Europe/Moscow"

USE_I18N = True

USE_TZ = True

USE_L10N = False

DATE_INPUT_FORMATS = ["%d/%m/%Y", "%d.%m.%Y"]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "static"
# When DEBUG is TRUE uncomment next line and comment one above
# If you wanna run 'python manage.py collectstatic' you will keep this unchanged
# STATICFILES_DIRS = [BASE_DIR / "static"]

MEDIA_URL = "media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

customColorPalette = [
        {
            "color": "hsl(4, 90%, 58%)",
            "label": "Red",
        },
        {
            "color": "hsl(340, 82%, 52%)",
            "label": "Pink",
        },
        {
            "color": "hsl(291, 64%, 42%)",
            "label": "Purple",
        },
        {
            "color": "hsl(262, 52%, 47%)",
            "label": "Deep Purple",
        },
        {
            "color": "hsl(231, 48%, 48%)",
            "label": "Indigo",
        },
        {
            "color": "hsl(207, 90%, 54%)",
            "label": "Blue",
        },
    ]

CKEDITOR_5_CONFIGS = {
    "default": {
        "toolbar": {
            "items": ["heading", "|", "bold", "italic", "link",
                      "bulletedList", "numberedList", "blockQuote", "imageUpload"],
                    },

    },
    "extends": {
        "blockToolbar": [
            "paragraph", "heading1", "heading2", "heading3",
            "|",
            "bulletedList", "numberedList",
            "|",
            "blockQuote",
        ],
        "toolbar": {
            "items": ["heading", "|", "outdent", "indent", "|", "bold", "italic", "link", "underline", "strikethrough",
                      "code", "subscript", "superscript", "highlight", "|", "codeBlock", "sourceEditing", "insertImage",
                      "bulletedList", "numberedList", "todoList", "|",  "blockQuote", "imageUpload", "|",
                      "fontSize", "fontFamily", "fontColor", "fontBackgroundColor", "mediaEmbed", "removeFormat",
                      "insertTable",
                      ],
            "shouldNotGroupWhenFull": "true",
        },
        "image": {
            "toolbar": ["imageTextAlternative", "|", "imageStyle:alignLeft",
                        "imageStyle:alignRight", "imageStyle:alignCenter", "imageStyle:side",  "|"],
            "styles": [
                "full",
                "side",
                "alignLeft",
                "alignRight",
                "alignCenter",
            ],

        },
        "table": {
            "contentToolbar": ["tableColumn", "tableRow", "mergeTableCells",
                               "tableProperties", "tableCellProperties"],
            "tableProperties": {
                "borderColors": customColorPalette,
                "backgroundColors": customColorPalette,
            },
            "tableCellProperties": {
                "borderColors": customColorPalette,
                "backgroundColors": customColorPalette,
            },
        },
        "heading": {
            "options": [
                {"model": "paragraph", "title": "Paragraph", "class": "ck-heading_paragraph"},
                {"model": "heading1", "view": "h1", "title": "Heading 1", "class": "ck-heading_heading1"},
                {"model": "heading2", "view": "h2", "title": "Heading 2", "class": "ck-heading_heading2"},
                {"model": "heading3", "view": "h3", "title": "Heading 3", "class": "ck-heading_heading3"},
            ],
        },
    },
    "list": {
        "properties": {
            "styles": "true",
            "startIndex": "true",
            "reversed": "true",
        },
    },
}

# Define a constant in settings.py to specify file upload permissions
CKEDITOR_5_FILE_UPLOAD_PERMISSION = "authenticated"  # Possible values: "staff", "authenticated", "any"
CKEDITOR_5_UPLOAD_PATH = "users_content"
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

if DEBUG:
    INSTALLED_APPS += [
        "debug_toolbar",
    ]
    MIDDLEWARE += [
        "debug_toolbar.middleware.DebugToolbarMiddleware",
    ]
    INTERNAL_IPS = ["127.0.0.1"]
